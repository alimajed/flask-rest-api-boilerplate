version: "3"

volumes:
  postgres_data: {}
  pgadmin_data: {}

services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_TARGET=development
        - TARGET_PORT=5000
        - COMMAND=run-development.sh
        - ENTRYPOINT=entrypoint-development.sh
    container_name: flask_web_dev
    env_file:
      - ./.envs/.development/flask
      - ./.envs/.development/postgres
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    volumes:
      - ./app:/srv/app
      - ./migrations:/srv/migrations
      # - ./.coverage:/srv/.coverage
    restart: on-failure
  postgres:
    image: postgres:alpine
    container_name: postgres
    networks:
        - default
    env_file:
      - ./.envs/.development/postgres
    ports:
        - 5432:5432
    restart: on-failure:5
    volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./pg-init-scripts:/docker-entrypoint-initdb.d
  pg-admin:
    image: dpage/pgadmin4
    container_name: pgadmin
    networks:
        - default
    env_file:
      - ./.envs/.development/pgadmin
    depends_on:
      - postgres
    ports:
        - 5050:80
    logging:
      driver: none
    restart: on-failure:5
